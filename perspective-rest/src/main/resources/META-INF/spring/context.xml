<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:hz="http://www.hazelcast.com/schema/spring"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.hazelcast.com/schema/spring
            http://www.hazelcast.com/schema/spring/hazelcast-spring-3.4.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.1.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="org.meridor.perspective" name-generator="org.meridor.perspective.rest.misc.PerspectiveBeanNameGenerator"/>
    <aop:aspectj-autoproxy/>
    
    <!-- Properties -->
    <bean id="configurationProperties"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:perspective.properties</value>
            </list>
        </property>
    </bean>

    <!-- Scheduler -->
    <task:annotation-driven scheduler="perspectiveScheduler"/>
    <task:scheduler id="perspectiveScheduler" pool-size="${perspective.scheduler.pool.size}"/>
    
    <!-- Embedded Hazelcast -->
    <hz:hazelcast id="hazelcastInstance">
        <hz:config>
            <hz:group name="${perspective.hazelcast.group.name}" password="${perspective.hazelcast.group.password}"/>
            <hz:properties>
                <hz:property name="hazelcast.merge.first.run.delay.seconds">5</hz:property>
                <hz:property name="hazelcast.merge.next.run.delay.seconds">5</hz:property>
                <hz:property name="hazelcast.logging.type">slf4j</hz:property>
            </hz:properties>
            <hz:network port="${perspective.hazelcast.port}">
                <hz:join>
                    <hz:multicast enabled="false" multicast-group="224.2.2.3" multicast-port="54327"/>
                    <hz:tcp-ip enabled="true">
                        <hz:members>127.0.0.1</hz:members>
                    </hz:tcp-ip>
                </hz:join>
                <hz:interfaces>
                    <hz:interface>127.0.0.1</hz:interface>
                </hz:interfaces>
            </hz:network>

        </hz:config>
    </hz:hazelcast>

    <!--<bean id="hazelcastClient" class="com.hazelcast.client.HazelcastClient" factory-method="newHazelcastClient">-->
        <!--<constructor-arg>-->
            <!--<bean class="com.hazelcast.client.config.ClientConfig">-->
                <!--<property name="groupConfig">-->
                    <!--<bean class="com.hazelcast.config.GroupConfig">-->
                        <!--<property name="name" value="${perspective.hazelcast.group.name}"/>-->
                        <!--<property name="password" value="${perspective.hazelcast.group.password}"/>-->
                    <!--</bean>-->
                <!--</property>-->
                <!--<property name="networkConfig">-->
                    <!--<bean class="com.hazelcast.client.config.ClientNetworkConfig">-->
                        <!--<property name="addresses">-->
                            <!--<list>-->
                                <!--<value>127.0.0.1:5801</value>-->
                            <!--</list>-->
                        <!--</property>-->
                    <!--</bean>-->
                <!--</property>-->
            <!--</bean>-->
        <!--</constructor-arg>-->
    <!--</bean>-->

</beans>